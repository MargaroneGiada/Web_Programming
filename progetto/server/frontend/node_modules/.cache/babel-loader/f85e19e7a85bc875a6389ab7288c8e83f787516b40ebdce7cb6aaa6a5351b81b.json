{"ast":null,"code":"var _jsxFileName = \"/media/giada/OS/Users/Asus/OneDrive - Universit\\xE0 degli Studi di Catania/_Universit\\xE0/Web Programming/Progetto/progetto/client/src/content/LocationSearchInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Geocoder from 'nominatim-geocoder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LocationSearchInput({\n  onSelect\n}) {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const geocoder = new Geocoder({\n    provider: 'osm',\n    // Usa OpenStreetMapm\n    lang: 'en'\n  });\n  const handleChange = async e => {\n    setAddress(e.target.value);\n    if (e.target.value.length > 2) {\n      const results = await geocoder.search({\n        q: e.target.value\n      });\n      setSuggestions(results);\n    }\n  };\n  const handleSelect = suggestion => {\n    setAddress(suggestion.display_name);\n    onSelect(suggestion);\n    setSuggestions([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: address,\n      onChange: handleChange,\n      placeholder: \"Search places...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSelect(suggestion),\n        style: {\n          cursor: 'pointer'\n        },\n        children: suggestion.display_name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(LocationSearchInput, \"deaYBaXwm3iBvAJJff2X1i4ioxk=\");\n_c = LocationSearchInput;\nexport default LocationSearchInput;\nvar _c;\n$RefreshReg$(_c, \"LocationSearchInput\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","Geocoder","jsxDEV","_jsxDEV","LocationSearchInput","onSelect","_s","address","setAddress","suggestions","setSuggestions","geocoder","provider","lang","handleChange","e","target","value","length","results","search","q","handleSelect","suggestion","display_name","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","style","cursor","_c","$RefreshReg$"],"sources":["/media/giada/OS/Users/Asus/OneDrive - Università degli Studi di Catania/_Università/Web Programming/Progetto/progetto/client/src/content/LocationSearchInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport Geocoder from 'nominatim-geocoder';\n\nfunction LocationSearchInput({ onSelect }) {\n    const [address, setAddress] = useState(\"\");\n    const [suggestions, setSuggestions] = useState([]);\n    \n    const geocoder = new Geocoder({\n        provider: 'osm', // Usa OpenStreetMapm\n        lang: 'en',\n    });\n\n    const handleChange = async (e) => {\n        setAddress(e.target.value);\n        if (e.target.value.length > 2) {\n            const results = await geocoder.search({ q: e.target.value });\n            setSuggestions(results);\n        }\n    };\n\n    const handleSelect = (suggestion) => {\n        setAddress(suggestion.display_name);\n        onSelect(suggestion);\n        setSuggestions([]);\n    };\n    return (\n        <div>\n            <input \n                type=\"text\" \n                value={address} \n                onChange={handleChange} \n                placeholder=\"Search places...\" \n            />\n            <ul>\n                {suggestions.map((suggestion, index) => (\n                    <li \n                        key={index} \n                        onClick={() => handleSelect(suggestion)}\n                        style={{ cursor: 'pointer' }}\n                    >\n                        {suggestion.display_name}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default LocationSearchInput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,0BAA0B;AACjC,OAAOC,QAAQ,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,mBAAmBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMe,QAAQ,GAAG,IAAIV,QAAQ,CAAC;IAC1BW,QAAQ,EAAE,KAAK;IAAE;IACjBC,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BP,UAAU,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC1B,IAAIF,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,MAAM,CAAC;QAAEC,CAAC,EAAEN,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC,CAAC;MAC5DP,cAAc,CAACS,OAAO,CAAC;IAC3B;EACJ,CAAC;EAED,MAAMG,YAAY,GAAIC,UAAU,IAAK;IACjCf,UAAU,CAACe,UAAU,CAACC,YAAY,CAAC;IACnCnB,QAAQ,CAACkB,UAAU,CAAC;IACpBb,cAAc,CAAC,EAAE,CAAC;EACtB,CAAC;EACD,oBACIP,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MACIuB,IAAI,EAAC,MAAM;MACXT,KAAK,EAAEV,OAAQ;MACfoB,QAAQ,EAAEb,YAAa;MACvBc,WAAW,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACF7B,OAAA;MAAAsB,QAAA,EACKhB,WAAW,CAACwB,GAAG,CAAC,CAACV,UAAU,EAAEW,KAAK,kBAC/B/B,OAAA;QAEIgC,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAACC,UAAU,CAAE;QACxCa,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAU,CAAE;QAAAZ,QAAA,EAE5BF,UAAU,CAACC;MAAY,GAJnBU,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAAC1B,EAAA,CA3CQF,mBAAmB;AAAAkC,EAAA,GAAnBlC,mBAAmB;AA6C5B,eAAeA,mBAAmB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}