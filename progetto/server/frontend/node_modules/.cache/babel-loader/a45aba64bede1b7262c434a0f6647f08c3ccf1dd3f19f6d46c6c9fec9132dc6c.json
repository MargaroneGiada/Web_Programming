{"ast":null,"code":"var _jsxFileName = \"/media/giada/OS/Users/Asus/OneDrive - Universit\\xE0 degli Studi di Catania/_Universit\\xE0/Web Programming/Progetto/progetto/client/src/content/Mappa.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  height: '650px',\n  width: '100%'\n};\nconst center = {\n  lat: 37.51136,\n  lng: 15.08709\n};\nconst mapId = '6e674a5f15d5b512';\nfunction Mappa() {\n  _s();\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [markersLoaded, setMarkersLoaded] = useState(false); // Nuovo stato per i marker\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      try {\n        const response = await axios.get('/api/events/markers');\n        console.log('API Response:', response.data);\n        setMarkers(response.data); // Aggiorna lo stato con i marker ricevuti\n      } catch (error) {\n        console.error('Error fetching marker data:', error);\n      }\n    };\n    fetchMarkers();\n  }, []);\n  const handleEventClick = eventId => {\n    navigate(`/evento?id=${eventId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Mappa justify-content-center fullpage\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyDfHYlA0EODV9YfoDGc5pAO93XLqhu_0Fs\",\n      mapIds: [mapId],\n      onLoad: () => setMapLoaded(true) // Segna che la mappa è caricata\n      ,\n      onError: error => console.error('Error loading Google Maps script:', error),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-5 shadow map\",\n        children: mapLoaded && markersLoaded ?\n        /*#__PURE__*/\n        // Controlla che entrambi siano caricati\n        _jsxDEV(GoogleMap, {\n          mapContainerStyle: mapContainerStyle,\n          center: center,\n          zoom: 15,\n          children: [markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: marker.latitude,\n              lng: marker.longitude\n            },\n            onClick: () => setSelectedMarker(marker)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n            position: {\n              lat: selectedMarker.latitude,\n              lng: selectedMarker.longitude\n            },\n            onCloseClick: () => setSelectedMarker(null),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => handleEventClick(selectedMarker._id),\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"text-primary fw-bold\",\n                  children: selectedMarker.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-dark\",\n                  children: selectedMarker.location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-dark\",\n                  children: new Date(selectedMarker.date).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading map and events...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this) // Messaggio di caricamento combinato\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Mappa, \"Iw9sQTSH0smYd/5WFO8e1QqxjB0=\", false, function () {\n  return [useNavigate];\n});\n_c = Mappa;\nexport default Mappa;\nvar _c;\n$RefreshReg$(_c, \"Mappa\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Navbar","Footer","GoogleMap","LoadScript","Marker","InfoWindow","jsxDEV","_jsxDEV","mapContainerStyle","height","width","center","lat","lng","mapId","Mappa","_s","markers","setMarkers","selectedMarker","setSelectedMarker","mapLoaded","setMapLoaded","markersLoaded","setMarkersLoaded","navigate","fetchMarkers","response","get","console","log","data","error","handleEventClick","eventId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","mapIds","onLoad","onError","zoom","map","marker","index","position","latitude","longitude","onClick","onCloseClick","_id","name","location","Date","date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/media/giada/OS/Users/Asus/OneDrive - Università degli Studi di Catania/_Università/Web Programming/Progetto/progetto/client/src/content/Mappa.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\n\nconst mapContainerStyle = {\n    height: '650px',\n    width: '100%',\n};\n\nconst center = {\n    lat: 37.51136,\n    lng: 15.08709,\n};\n\nconst mapId = '6e674a5f15d5b512';\n\nfunction Mappa() {\n    const [markers, setMarkers] = useState([]);\n    const [selectedMarker, setSelectedMarker] = useState(null);\n    const [mapLoaded, setMapLoaded] = useState(false);\n    const [markersLoaded, setMarkersLoaded] = useState(false); // Nuovo stato per i marker\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchMarkers = async () => {\n            try {\n                const response = await axios.get('/api/events/markers');\n                console.log('API Response:', response.data); \n                setMarkers(response.data);  // Aggiorna lo stato con i marker ricevuti\n            } catch (error) {\n                console.error('Error fetching marker data:', error);\n            }\n        };\n\n        fetchMarkers();\n    }, []);\n\n    const handleEventClick = (eventId) => {\n        navigate(`/evento?id=${eventId}`);\n    };\n\n    return (\n        <div className=\"Mappa justify-content-center fullpage\">\n            <Navbar />\n            <LoadScript\n                googleMapsApiKey=\"AIzaSyDfHYlA0EODV9YfoDGc5pAO93XLqhu_0Fs\"\n                mapIds={[mapId]}\n                onLoad={() => setMapLoaded(true)} // Segna che la mappa è caricata\n                onError={(error) => console.error('Error loading Google Maps script:', error)}\n            >\n                <div className='m-5 shadow map'>\n                    {(mapLoaded && markersLoaded) ? (  // Controlla che entrambi siano caricati\n                        <GoogleMap\n                            mapContainerStyle={mapContainerStyle}\n                            center={center}\n                            zoom={15}\n                        >\n                            {markers.map((marker, index) => (\n                                <Marker\n                                    key={index}\n                                    position={{ lat: marker.latitude, lng: marker.longitude }}\n                                    onClick={() => setSelectedMarker(marker)}\n                                />\n                            ))}\n\n                            {selectedMarker && (\n                                <InfoWindow\n                                    position={{ lat: selectedMarker.latitude, lng: selectedMarker.longitude }}\n                                    onCloseClick={() => setSelectedMarker(null)}\n                                >\n                                    <div>\n                                        <a onClick={() => handleEventClick(selectedMarker._id)}>\n                                            <h5 className='text-primary fw-bold'>{selectedMarker.name}</h5>\n                                            <p className='text-dark'>{selectedMarker.location}</p>\n                                            <p className='text-dark'>{new Date(selectedMarker.date).toLocaleDateString()}</p>\n                                        </a>\n                                    </div>\n                                </InfoWindow>\n                            )}\n                        </GoogleMap>\n                    ) : (\n                        <p>Loading map and events...</p> // Messaggio di caricamento combinato\n                    )}\n                </div>\n            </LoadScript>\n            <Footer />\n        </div>\n    );\n}\n\nexport default Mappa;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}